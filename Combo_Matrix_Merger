### Load Libraries
library(biomaRt)
library(dplyr)
library(tidyverse)
library(readxl)

### Connect to Ensembl BioMart
ensembl<- useEnsembl(biomart = "genes")
ensembl.con <- useMart("ensembl", dataset = 'dmelanogaster_gene_ensembl')

### Explore available attributes and filters
attr <- listAttributes(ensembl.con)
filters <- listFilters(ensembl.con)

### Query gene info for fly (Drosophila melanogaster)
fly_gene_info_1 <- getBM(
      attributes = c('external_gene_name','ensembl_gene_id'),
      filters = "flybase_gene_id",
      values = GLDS_347_rna_seq_Normalized_Counts$GENE.ID,
      mart = ensembl.con)

fly_gene_info_2 <- getBM(
      attributes = c('description','gene_biotype','external_synonym','name_1006','definition_1006'),
      values = GLDS_347_rna_seq_Normalized_Counts$GENE.ID,
      mart = ensembl.con)

### Merged Mouse data/Plant data by GENE.ID
Mouse_Merge <- Reduce(function(x,y) merge(x = x, y = y, by = "GENE.ID", all = "TRUE"), list(GLDS_245_rna_seq_Normalized_Counts, GLDS_248_rna_seq_Normalized_Counts))
Plant_Merge <- Reduce(function(x,y) merge(x = x, y = y, by = "GENE.ID", all = "TRUE"), list(GLDS_38_rna_seq_Normalized_Counts, GLDS_37_rna_seq_Normalized_Counts))

### Combine Human, Mouse, Plant, and Fly into one data frame

AWG_Combo_Matrix_Data_02 <- as.data.frame(bind_rows(JAXA_Fixed_ENSEMBL_IDs, Mouse_Merge, Plant_Merge, GLDS_347_rna_seq_Normalized_Counts))

colnames(AWG_Combo_Matrix_Data_02)[1] <- "Human.ENSEMBL"
colnames(Plant_Merge)[1] <- "Plant.ENSEMBL"
colnames(Mouse_Merge)[1] <- "Mouse.ENSEMBL"
colnames(Fly_Merge)[1] <- "GLDS_347_rna_seq_Normalized_Counts.ENSEMBL"

### Rename gene ID columns to species-specific names
colnames(JAXA_Fixed_ENSEMBL_IDs)[1]<-"Human Gene stable ID"
colnames(Plant_Merge)[1]<-"Arabidopsis Gene stable ID"
colnames(Mouse_Merge)[1]<-"Mouse Gene stable ID"
colnames(GLDS_347_rna_seq_Normalized_Counts)[1]<-"DROM Gene stable ID"

### Import species orthology table
Species_orthology_link <- read_excel("~/Downloads/Species_orthology_link (minimal) (1).xlsx")

### Merge all datasets based on species-specific gene IDs
df1 <- list(Species_orthology_link, JAXA_Fixed_ENSEMBL_IDs) %>%
  reduce(inner_join, by = "Human Gene stable ID")

df2 <- list(df1, Plant_Merge) %>%
  reduce(inner_join, by = "Arabidopsis Gene stable ID")

df3 <- list(df2, Mouse_Merge) %>%
  reduce(inner_join, by = "Mouse Gene stable ID")

Combo_Merged_Matrix_ENSEMBL <- list(df3, GLDS_347_rna_seq_Normalized_Counts) %>%
  reduce(inner_join, by = "DROM Gene stable ID")

### Create individual species expression matrices
Human_Combo_Merged_Matrix_ENSEMBL <- Combo_Merged_Matrix_ENSEMBL[, -c(2:4)]
Plant_Combo_Merged_Matrix_ENSEMBL <- Combo_Merged_Matrix_ENSEMBL[, -c(1, 3, 4)]
Mouse_Combo_Merged_Matrix_ENSEMBL <- Combo_Merged_Matrix_ENSEMBL[, -c(1:3)]
Fly_Combo_Merged_Matrix_ENSEMBL <- Combo_Merged_Matrix_ENSEMBL[, -c(1:2, 4)]

### Convert expression values to integers (drop gene ID column)
UN_Human_Combo_Merged_Matrix_ENSEMBL[,-1] <- lapply(UN_Human_Combo_Merged_Matrix_ENSEMBL[,-1], as.integer)
UN_Plant_Combo_Merged_Matrix_ENSEMBL[,-1] <- lapply(UN_Plant_Combo_Merged_Matrix_ENSEMBL[,-1], as.integer)
UN_Fly_Combo_Merged_Matrix_ENSEMBL[,-1] <- lapply(UN_Fly_Combo_Merged_Matrix_ENSEMBL[,-1], as.integer)
UN_Mouse_Combo_Merged_Matrix_ENSEMBL[,-1] <- lapply(UN_Mouse_Combo_Merged_Matrix_ENSEMBL[,-1], as.integer)

### Save expression matrices
write.csv(UN_Human_Combo_Merged_Matrix_ENSEMBL, '~/Ensembl_Matrix_Unnormalized/UN_Human_Combo_Merged_Matrix_ENSEMBL.csv')
write.csv(UN_Plant_Combo_Merged_Matrix_ENSEMBL, '~/Ensembl_Matrix_Unnormalized/UN_Plant_Combo_Merged_Matrix_ENSEMBL.csv')
write.csv(UN_Mouse_Combo_Merged_Matrix_ENSEMBL, '~/Ensembl_Matrix_Unnormalized/UN_Mouse_Combo_Merged_Matrix_ENSEMBL.csv')
write.csv(UN_Fly_Combo_Merged_Matrix_ENSEMBL, '~/Ensembl_Matrix_Unnormalized/UN_Fly_Combo_Merged_Matrix_ENSEMBL.csv')

### Retrieve info for significant human genes
ensembl <- useEnsembl(biomart = "genes")
ensembl.con <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")

Sig_Genes <- getBM(
  attributes = c('external_gene_name', 'description', 'gene_biotype',
                 'external_synonym', 'name_1006', 'definition_1006',
                 'phenotype_description'),
  filters = "external_gene_name",
  values = Unnormalized_Counts_Sig_Genes$GENE.ID,
  mart = ensembl.con
)

write.csv(Sig_Genes, '~/Ensembl_Matrix_Unnormalized/Sig_Human_Genes.csv')